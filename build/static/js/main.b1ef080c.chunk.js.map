{"version":3,"sources":["App.js","index.js"],"names":["Notification","notificationMessage","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","Form","newName","handleNameChange","newNumber","handleNumberChange","handleSubmit","type","value","onChange","onClick","Search","search","handleSearch","Display","persons","handleDelete","filter","person","name","toLowerCase","map","className","id","number","App","useState","setPersons","setNewName","setNewNumber","setSearch","setNotificationMessage","baseURL","reload","axios","get","then","response","data","createNotification","message","setTimeout","useEffect","event","target","preventDefault","thePerson","find","undefined","window","confirm","put","catch","post","concat","alert","e","delete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b1ef080c.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nconst Notification = ({ notificationMessage }) => {\n  const style = {\n    color: 'green',\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  }\n  return notificationMessage === null\n  ? null\n  : <div style={style}>\n      {notificationMessage} \n    </div>\n}\n\nconst Form = ({ newName, handleNameChange, newNumber, handleNumberChange, handleSubmit }) => (\n  <form>\n    <div>\n      <label>Name: </label> <input type=\"text\" value={newName} onChange={handleNameChange} />\n    </div>\n    <div>\n      <label>Number</label> <input type=\"text\" value={newNumber} onChange={handleNumberChange} />\n    </div>\n    <div>\n      <button type=\"submit\" onClick={handleSubmit} style={{ color: 'green'}}> add </button>\n    </div>\n  </form>\n)\n\nconst Search = ({ search, handleSearch }) => (\n  <div>\n  <label>Search</label> <input type=\"text\" value={search} onChange={handleSearch} />\n  </div>\n)\n\nconst Display = ({ persons, search, handleDelete }) => (\n  <ul>\n    {\n      persons.filter((person) => person.name.toLowerCase().search(search.toLowerCase()) !== -1)\n      .map((person) => (\n        <li key={person.id} className='listEntry'>\n          <button onClick={handleDelete(person.id)} style={{ color: 'red' }}> Delete </button>\n          {person.name}: {person.number}\n        </li>\n      ))\n    }\n  </ul>\n)\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [search, setSearch] = useState('')\n  const [notificationMessage, setNotificationMessage] = useState(null)\n\n  const baseURL = '/api/persons';\n  const reload = () => {\n    axios\n      .get(baseURL)\n      .then(response => setPersons(response.data))  \n  }\n  const createNotification = (message) => {\n    setNotificationMessage(message)\n    setTimeout(() => setNotificationMessage(null), 4000)\n  }\n\n  useEffect(reload, [])\n\n  const handleNameChange = (event) => setNewName(event.target.value)\n  const handleNumberChange = (event) => setNewNumber(event.target.value)\n  const handleSearch = (event) => setSearch(event.target.value)\n  const handleDelete = (id) => () => {\n    const name = persons.find(e => e.id === id).name\n    if(window.confirm(`Delete ${name} ?`))\n      axios\n        .delete(`${baseURL}/${id}`)\n        .then(() => {\n          setPersons(persons.filter((e) => e.id !== id))\n          createNotification(`${name} successfully deleted`)\n        })\n        .catch(() => {\n          createNotification(`${name} is already removed`)\n          reload()  // persons array is not up-to-date\n        })\n  }\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    if(newName === '' || newNumber === '') {\n      window.alert('Please fill both name and number')\n      return\n    }\n      \n    const thePerson = persons.find((person) => person.name === newName)\n    if(thePerson !== undefined) {\n      if(window.confirm(`${newName} already exists. Replace the old number with a new one ?`)) {\n        axios\n          .put(`${baseURL}/${thePerson.id}`, { name: newName, number: newNumber })\n          .then(({ data }) => {\n            setPersons(persons.map(person => person.id === data.id ? data : person))\n            createNotification(`${newName}'s number is successfully updated`)\n          })\n          .catch(() => {\n            createNotification(`${newName} could not be updated`)\n          })\n      }\n    }\n    else {\n      axios\n        .post(baseURL, {name: newName, number: newNumber})\n        .then((response) => {\n          setPersons(persons.concat(response.data))\n          setNewName('')\n          setNewNumber('')\n          createNotification(`${newName} is successfully added`)\n        })\n    }\n  }\n\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <Notification notificationMessage={notificationMessage}/>\n      <Form\n        newName={newName} handleNameChange={handleNameChange}\n        newNumber={newNumber} handleNumberChange={handleNumberChange}\n        handleSubmit={handleSubmit}\n      />\n      <h2>Numbers</h2>\n      <Search search={search} handleSearch={handleSearch} />\n      <Display persons={persons} search={search} handleDelete={handleDelete}/>\n    </>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}